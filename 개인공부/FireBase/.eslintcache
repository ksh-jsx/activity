[{"C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\App.js":"1","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\fbase.js":"2","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\index.js":"3","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\routes\\Auth.js":"4","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\Navigation.js":"5","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\Router.js":"6","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\routes\\Profile.js":"7","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\routes\\Home.js":"8","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\Nweet.js":"9","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\NweetFactory.js":"10","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\SignInForm.js":"11","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\SignUpForm.js":"12"},{"size":1085,"mtime":1638795298550,"results":"13","hashOfConfig":"14"},{"size":740,"mtime":1625747463493,"results":"15","hashOfConfig":"14"},{"size":242,"mtime":1625747463495,"results":"16","hashOfConfig":"14"},{"size":1678,"mtime":1638796691764,"results":"17","hashOfConfig":"14"},{"size":333,"mtime":1625747463488,"results":"18","hashOfConfig":"14"},{"size":926,"mtime":1638796049261,"results":"19","hashOfConfig":"14"},{"size":1099,"mtime":1638795298557,"results":"20","hashOfConfig":"14"},{"size":850,"mtime":1625747463498,"results":"21","hashOfConfig":"14"},{"size":1837,"mtime":1625747463489,"results":"22","hashOfConfig":"14"},{"size":1993,"mtime":1638795298553,"results":"23","hashOfConfig":"14"},{"size":1451,"mtime":1638798240427,"results":"24","hashOfConfig":"14"},{"size":5113,"mtime":1638800750026,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i3iaya",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\App.js",[],"C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\fbase.js",[],"C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\index.js",[],["58","59"],"C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\routes\\Auth.js",["60","61","62"],"import React, { useState } from \"react\";\r\nimport { authService, firebaseInstance } from \"fbase\";\r\nimport SignInForm from \"components/SignInForm\";\r\nimport SignUpForm from \"components/SignUpForm\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth=() => {\r\n\r\n  const [newAccount, setNewAccount] = useState(false);\r\n  \r\n  const onSocialClick = async(event) => {\r\n    const {target:{name}} = event;\r\n    let provider;\r\n    if(name === \"google\"){\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if(name = \"github\"){\r\n      provider = new firebaseInstance.auth.GIthubAuthProvider();\r\n    }\r\n    await authService.signInWithPopup(provider) ;\r\n  }\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <div className=\"authWapper\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30 }}\r\n        className=\"logo\"\r\n      />\r\n      {newAccount ? (\r\n        <SignUpForm/>\r\n      ):(\r\n        <div>\r\n          <SignInForm/>\r\n          <div onClick={toggleAccount} className=\"authSpan\">회원가입</div>\r\n          <div className=\"socialWrap\">\r\n            <button onClick={onSocialClick} name=\"google\">Continue with <FontAwesomeIcon icon={faGoogle} /></button>\r\n            <button onClick={onSocialClick} name=\"github\">Continue with <FontAwesomeIcon icon={faGithub} /></button >\r\n          </div>\r\n        </div>\r\n      )\r\n      }\r\n      \r\n    </div>\r\n  );\r\n};\r\nexport default Auth;","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\Navigation.js",[],"C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\Router.js",[],"C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\routes\\Profile.js",["63"],"import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"Display name\"\r\n          value={newDisplayName}\r\n        />\r\n        <input type=\"submit\" value=\"Update Profile\" />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Log Out</button>\r\n    </>\r\n  );\r\n};","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\routes\\Home.js",["64"],"import React, { useState, useEffect } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\Nweet.js",["65"],"import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"fbase\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  \r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n        <h4>&nbsp;</h4>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your nweet\"\r\n              value={newNweet}\r\n              required\r\n              onChange={onChange}\r\n            />\r\n            <input type=\"submit\" value=\"Update Nweet\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && (\r\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\NweetFactory.js",["66"],"import React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { storageService, dbService } from \"fbase\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(null);\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"What's on your mind?\"\r\n        maxLength={120}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\nexport default NweetFactory;","C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\SignInForm.js",["67"],"import React, { useState } from \"react\";\r\nimport { authService } from \"fbase\";\r\n\r\nconst SignInForm = () => {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {      \r\n      let data = await authService.signInWithEmailAndPassword(email, password);\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n      alert(error)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"signInForm\">\r\n        <div>\r\n            <input\r\n            name=\"email\"\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            required\r\n            value={email}\r\n            onChange={onChange}\r\n            />\r\n            <input\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            value={password}\r\n            onChange={onChange}\r\n            />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          value=\"로그인\"\r\n        />\r\n        \r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n};\r\nexport default SignInForm;",["68","69"],"C:\\Users\\shkim\\Desktop\\activity\\개인공부\\FireBase\\src\\components\\SignUpForm.js",["70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":22,"column":15,"nodeType":"79","messageId":"83","endLine":22,"endColumn":19},{"ruleId":"84","severity":1,"message":"85","line":22,"column":15,"nodeType":"86","messageId":"87","endLine":22,"endColumn":30},{"ruleId":"88","severity":1,"message":"89","line":5,"column":1,"nodeType":"90","endLine":42,"endColumn":3},{"ruleId":"77","severity":1,"message":"91","line":2,"column":21,"nodeType":"79","messageId":"80","endLine":2,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":50,"column":13,"nodeType":"94","endLine":50,"endColumn":76},{"ruleId":"92","severity":1,"message":"93","line":62,"column":11,"nodeType":"94","endLine":62,"endColumn":62},{"ruleId":"77","severity":1,"message":"95","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":15},{"ruleId":"73","replacedBy":"96"},{"ruleId":"75","replacedBy":"97"},{"ruleId":"77","severity":1,"message":"95","line":22,"column":10,"nodeType":"79","messageId":"80","endLine":22,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":41,"column":36,"nodeType":"100","messageId":"101","endLine":41,"endColumn":37,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":52,"column":26,"nodeType":"105","messageId":"106","endLine":52,"endColumn":28},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-const-assign","'name' is constant.","const","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'storageService' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'error' is assigned a value but never used.",["107"],["108"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["109","110"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"messageId":"111","fix":"112","desc":"113"},{"messageId":"114","fix":"115","desc":"116"},"removeEscape",{"range":"117","text":"118"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"119","text":"120"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1197,1198],"",[1197,1197],"\\"]